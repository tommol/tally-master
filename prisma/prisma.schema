generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contest {
  id            Int          @id @default(autoincrement())
  name          String
  year          String
  logo          String
  enableApply   Boolean      @default(false)
  enableVoting  Boolean      @default(false)
  enableJudging Boolean      @default(false)
  votingStart   DateTime?
  votingEnd     DateTime?
  applyStart    DateTime?
  applyEnd      DateTime?
  Contestant    Contestant[]
  Judge         Judge[]
  Judgevote     Judgevote[]
  OnlineVote    OnlineVote[]
  PublicVote    PublicVote[]
}

model Contestant {
  id          Int          @id @default(autoincrement())
  contestId   Int
  firstName   String
  lastName    String
  city        String
  biogrpahy   String
  mainPhoto   String
  motivation  String
  nickname    String?
  performance String
  photo1      String
  photo2      String
  plans       String
  email       String       @unique
  instagram   String?
  contest     Contest      @relation(fields: [contestId], references: [id])
  Judgevote   Judgevote[]
  OnlineVote  OnlineVote[]
  PublicVote  PublicVote[]
}

model OnlineVote {
  id           Int        @id @default(autoincrement())
  contestId    Int
  contestantId Int
  phone        String
  code         String
  contest      Contest    @relation(fields: [contestId], references: [id])
  contestant   Contestant @relation(fields: [contestantId], references: [id])

  @@unique([contestId, phone])
}

model PublicVote {
  id           Int        @id @default(autoincrement())
  contestId    Int
  contestantId Int
  amount       Int
  contest      Contest    @relation(fields: [contestId], references: [id])
  contestant   Contestant @relation(fields: [contestantId], references: [id])

  @@unique([contestId, contestantId])
}

model Judge {
  id        Int         @id @default(autoincrement())
  contestId Int
  firstName String
  lastName  String
  nickname  String?
  title     String?
  email     String
  contest   Contest     @relation(fields: [contestId], references: [id])
  Judgevote Judgevote[]
}

model Judgevote {
  id           Int        @id @default(autoincrement())
  contestId    Int
  contestantId Int
  judgeId      Int
  category     Int
  rank         Int
  Contest      Contest    @relation(fields: [contestId], references: [id])
  Contestant   Contestant @relation(fields: [contestantId], references: [id])
  Judge        Judge      @relation(fields: [judgeId], references: [id])

  @@unique([judgeId, category, rank])
}
